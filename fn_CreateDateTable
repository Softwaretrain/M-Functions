let fn_CreateDateTable = (Start as any, optional End as any, optional Culture as nullable text) as table =>
    let
        Culture=if Culture=null then "fa-IR" else Culture,
        StartDate= Date.FromText(try Date.ToText(Start,"yyy/MM/dd","en-EN") otherwise Start ,Culture),
        EndDate= if End=null then Date.FromText(Date.ToText(DateTime.Date(DateTime.LocalNow()),"yyy/MM/dd","en-EN"),Culture) else Date.FromText(try Date.ToText(End,"yyy/MM/dd","en-EN") otherwise End,Culture),
        DayCount = Duration.Days(Duration.From(EndDate - StartDate))+1,
        Source = List.Dates(StartDate,DayCount,#duration(1,0,0,0)),
        TableFromList = Table.FromList(Source, Splitter.SplitByNothing()),
        ChangedType = Table.TransformColumnTypes(TableFromList,{{"Column1", type date}}),
        RenamedColumns = Table.RenameColumns(ChangedType,{{"Column1", "Date"}}),
        InsertLocalDate = Table.AddColumn(RenamedColumns, "LocalDate", each Date.ToText([Date],"yyy/MM/dd",Culture)),
        DateNumber = Table.AddColumn(InsertLocalDate, "DateNumber", each Text.Remove([LocalDate],{"-","/"})),
        #"YYY/MM" = Table.AddColumn(DateNumber, "YYY/MM", each Text.Start([LocalDate],7),type text),
        InsertYear = Table.AddColumn(#"YYY/MM", "Year", each Number.FromText(Date.ToText([Date],"yyy",Culture))),
        InsertQuarter = Table.AddColumn(InsertYear, "QuarterOfYear", each Number.RoundUp(Number.FromText( Date.ToText([Date],"MM",Culture))/3,0)),
        InsertSeason = Table.AddColumn(InsertQuarter, "Season", each {"بهار","تابستان","پاییز","زمستان"}{[QuarterOfYear]-1}),
        InsertMonth = Table.AddColumn(InsertSeason, "MonthOfYear", each Number.FromText(Date.ToText([Date],"MM",Culture))),
        InsertDay = Table.AddColumn(InsertMonth, "DayOfMonth", each Number.FromText(Date.ToText([Date],"dd",Culture))),
        InsertMonthName = Table.AddColumn(InsertDay, "MonthName", each Date.ToText([Date], "MMMM", Culture), type text),
        InsertCalendarMonth = Table.AddColumn(InsertMonthName, "MonthInCalendar", each Date.ToText([Date],"MMM",Culture)&" "&Date.ToText([Date],"yyy",Culture)),
        InsertCalendarQtr = Table.AddColumn(InsertCalendarMonth, "QuarterInCalendar", each {"بهار","تابستان","پاییز","زمستان"}{[QuarterOfYear]-1} & "-" & Number.ToText([Year])),
        InsertDayWeek = Table.AddColumn(InsertCalendarQtr, "DayInWeek", each (Date.DayOfWeek([Date],Day.Saturday)+1)),
        InsertDayName = Table.AddColumn(InsertDayWeek, "DayOfWeekName", each Date.ToText([Date], "dddd", Culture), type text),
        DayofYear = Table.AddColumn(InsertDayName, "ShamsiDayOfYear", each if Date.DayOfYear([Date])>=80 then Date.DayOfYear([Date])-79 else Date.DayOfYear([Date])+286,Int64.Type),
        InsertWeekEnding = Table.AddColumn(DayofYear, "WeekEnding", each Date.ToText(Date.EndOfWeek([Date],Day.Saturday),"yyy/MM/dd",Culture)),
        RenameColumns = Table.RenameColumns(InsertWeekEnding,{{"Date", "تاریخ میلادی"}, {"LocalDate", "تاریخ شمسی"}, {"DateNumber", "تاریخ عددی"}, {"YYY/MM", "سال و ماه"}, {"Year", "سال"}, {"QuarterOfYear", "شماره فصل"}, {"Season", "فصل"}, {"MonthOfYear", "شماره ماه"}, {"DayOfMonth", "روز"}, {"MonthName", "نام ماه"}, {"MonthInCalendar", "نام ماه و سال"}, {"QuarterInCalendar", "فصل و سال"}, {"DayInWeek", "روز هفته"}, {"DayOfWeekName", "نام روز هفته"}, {"ShamsiDayOfYear", "شماره روز سال"}, {"WeekEnding", "تاریخ پایان هفته"}}),

        fnPersianDate=(PersianDate as text)=>
let
    DateToText=PersianDate,
    year=Text.Start(DateToText,Text.PositionOf(DateToText,"/")),
    month=Text.Middle(DateToText,Text.PositionOf(DateToText,"/")+1,2),
    day=Text.End(DateToText,2),
    m={"فروردین","اردیبهشت","خرداد","تیر","مرداد","شهریور","مهر","آبان","آذر","دی","بهمن","اسفند"},

    tt=(NumberToText as text)=>
        let
            a=Text.PadStart(NumberToText,4,"0"),
            a1=Number.FromText(a),
            b={"ده","یازده","دوازده","سیزده","چهارده","پانزده","شانزده","هفده","هجده","نوزده"},
            c={"","یک","دو","سه","چهار","پنج","شش","هفت","هشت","نه"},
            d={"","صد","دویست","سیصد","چهارصد","پانصد","ششصد","هفتصد","هشتصد","نهصد"},
            e={"","","بیست","سی","چهل","پنجاه","شصت","هفتاد","هشتاد","نود"},
            h=if Number.FromText(Text.Middle(a,0,1))=0 then "" else if Number.FromText(Text.End(a,3))>0 then "هزار و " else " هزار",
            h1=if a1=0 then "صفر" else d{Number.FromText(Text.Middle(a,1,1))},
            h2=if Number.FromText(Text.Middle(a,1,1))=0 then "" else if Number.FromText(Text.Middle(a,2,1))=0 and Number.FromText(Text.Middle(a,3,1))=0 then "" else " و ",
            h3=if a1=0 then "صفر" else e{Number.FromText(Text.Middle(a,2,1))},
            h4=if Number.FromText(Text.Middle(a,2,1))=0 or Number.FromText(Text.Middle(a,2,1))=1 or Number.FromText(Text.Middle(a,3,1))=0 then "" else " و ",
            h5=if Number.FromText(Text.Middle(a,2,1))<>1 then c{Number.FromText(Text.Middle(a,3,1))} else b{Number.FromText(Text.Middle(a,3,1))},
            h6=h&h1&h2&h3&h4&h5
        in h6,
    y=tt(year),
    mo=m{Number.FromText(month)-1},
    d=tt(day),
    result=d&" "&mo&" "&y
in
    result,
            AddPersianDate= Table.AddColumn(RenameColumns,"تاریخ شمسی به حروف", each fnPersianDate([تاریخ شمسی]))


    in
        AddPersianDate,
FunctionType = type function
        (
            Start as 
            (type date meta
                [
                Documentation.FieldCaption = "Starting local date",
                Documentation.FieldDescription = "Put a date based on culture in third field, Persian date is default",
                Documentation.SampleValues = {"1367/01/25"}
                ]
            ),
            optional End as 
            (type date meta
                [
                Documentation.FieldCaption = "Ending local date",
                Documentation.FieldDescription = "Put a date based on culture in third field, Persian date is default and if skip blank, Current Persian date is default",
                Documentation.SampleValues = {"1400/01/01"}
                ]
            ),
            optional Culture as 
            (type text meta
                [
                Documentation.FieldCaption = "Region code to create dimDate",
                Documentation.FieldDescription = "Put a region code like ""fa-IR"" as text",
                Documentation.AllowedValues = {"fa-IR", "en-US", "en-GB", "fr-FR", "de-DE", "es-ES", "it-IT", "zh-CN", "ar-SA", "he-IL", "hi-IN", "ja-JP", "th-TH"}
                ]
            )
        ) as table 
        meta
        [
            Documentation.Name = "fn_CreateDateTable",
            Documentation.Description = "Create dimDate table for local date - default is Persian ",
            Documentation.Version = " 1.0 ",
            Documentation.Category = " Table ",
            Documentation.Author = " Mahmoud Bani Asadi ",
            Documentation.Source = " https://www.arshad-hesabdar.ir ",
            Documentation.Examples = {[Description =  " see this blog post: https://www.vahiddm.com/post/shamsi-date-table-powerbi",
        Code = " fn_CreateDateTable(""1367/01/25"",""1401/01/01"",""fa-IR"")",
        Result = " DimDateTable "]}       
        ]
in
    Value.ReplaceType(fn_CreateDateTable, FunctionType)
