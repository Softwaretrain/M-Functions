\\Generate a table containing the details of all functions.
let
    Source = Table.SelectRows(Table.RemoveRowsWithErrors(Record.ToTable(#shared)), each Type.Is(Value.Type([Value]),type function)),
    Meta = Table.TransformColumns(Source,{{"Value",each Value.Metadata(Value.Type(_)), type record}}),
    Expand = Table.ExpandRecordColumn(Meta, "Value", {"Documentation.Name", "Documentation.Description", "Documentation.LongDescription", "Documentation.Category", "Documentation.Examples", "Documentation.DisplayName", "Documentation.Caption"}, {"Documentation.Name", "Documentation.Description", "Documentation.LongDescription", "Documentation.Category", "Documentation.Examples", "Documentation.DisplayName", "Documentation.Caption"}),
    FirstExample = Table.AddColumn(Expand, "Examples", each try if Type.Is(Value.Type([Documentation.Examples]), type record) then [Documentation.Examples] else List.First([Documentation.Examples]) otherwise null),
    ExpandedEx = Table.ExpandRecordColumn(FirstExample, "Examples", {"Description", "Code", "Result"}, {"Description", "Code", "Result"}),
    Rename = Table.RenameColumns(ExpandedEx,{{"Name", "Function name"}, {"Code", "Example Code"}, {"Result", "Example Output"}, {"Documentation.Description", "Short Description"}, {"Documentation.LongDescription", "Long Description"}, {"Documentation.Name", "Documentation Name"}, {"Documentation.Category", "Category"}, {"Documentation.DisplayName", "Documentation DisplayName"}, {"Documentation.Caption", "Documentation Caption"}, {"Description", "Example Description"}}),
    RemoveExtraCol = Table.SelectColumns(Rename,{"Function name", "Documentation Name", "Short Description", "Long Description", "Category", "Documentation DisplayName", "Documentation Caption", "Example Description", "Example Code", "Example Output"}),
    SpliCatSubCat = Table.SplitColumn(RemoveExtraCol, "Category", Splitter.SplitTextByEachDelimiter({"."}, QuoteStyle.Csv, false), {"Category", "Subcategory"}),
    AltCat = Table.AddColumn(SpliCatSubCat, "Alt Category", each Text.BeforeDelimiter([Function name], "."), type text),
    AltSubCat = Table.AddColumn(AltCat, "Alt Subcategory", each Text.AfterDelimiter([Function name], "."), type text),
    CombinedCat = Table.AddColumn(AltSubCat, "Combined Category", each if [Category] = null or [Category] = "" then [Alt Category] else [Category]),
    CombinedSubCat = Table.AddColumn(CombinedCat, "Combined Subcategory", each if [Subcategory] = null or [Subcategory] = "" then [Alt Subcategory] else [Subcategory]),
    RemoveChar = Table.TransformColumns(CombinedSubCat,{{"Long Description", each List.Accumulate({"<code>","</code>","<ul>","</ul>","<li>","</li>"}, _, (txt, word) => Text.Replace(txt, word, ""))}})
in
    RemoveChar
